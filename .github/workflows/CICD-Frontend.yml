name: CICD-Frontend

on:
  push:
    branches:
      - main
 
jobs: 
  Frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2
          
      - name: Build Frontend
        run: |
           cd Frontend/angular
           npx ng build

      - name: Archive Frontend build
        env:
            # Accessing the secret variable
            FBUILD_PATH: ${{ secrets.BUILD_FRONTEND }}
        uses: actions/upload-artifact@v2
        with:
           name: frontend-artifact
           path: "${{ github.workspace }}/Backend/aspnet-core/src/CompanyWebsite.Web.Host/wwwroot"
           
      - name: Download Frontend artifact
        uses: actions/download-artifact@v2
        with:
            name: frontend-artifact
            path: frontend-dist

      - name: Copy Frontend build to FrontendDist
        env:
                # Accessing the secret variable
                FBUILD_PATH: ${{ secrets.BUILD_FRONTEND }}
        run: cp -R frontend-dist/* "${{ github.workspace }}/Backend/aspnet-core/src/CompanyWebsite.Web.Host/wwwroot"
      
      - name: Display contents of FrontendDist
        run: ls -R "${{ github.workspace }}/Frontend/angular/FrontendDist"   
        
  Backend:
    needs: [Frontend]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Solution Backend
        env:
          # Accessing the secret variable
          SOLUTION_PATH: ${{ secrets.BACKEND_SOLUTION_PATH }}
        run: |
         dotnet build "${GITHUB_WORKSPACE}/${SOLUTION_PATH}"
         
      - name: Test test Backend
        env:
          # Accessing the secret variable
          TEST_PATH: ${{ secrets.BACKEND_TEST_PATH }}
        run: dotnet test "${GITHUB_WORKSPACE}/${TEST_PATH}"
        
     
