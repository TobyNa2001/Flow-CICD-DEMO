name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Npm install
        run: |
          cd Frontend/angular
          npm install
    
      - name: Build Frontend
        env:
            # Accessing the secret variable
            FTEST_PATH: ${{ secrets.FRONTEND_SOLUTION_PATH }}
        run: dotnet build "${GITHUB_WORKSPACE}/${FTEST_PATH}"

  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Solution Backend
        env:
          # Accessing the secret variable
          SOLUTION_PATH: ${{ secrets.BACKEND_SOLUTION_PATH }}
        run: |
         dotnet build "${GITHUB_WORKSPACE}/${SOLUTION_PATH}"
        
      - name: Test Backend
        env:
          # Accessing the secret variable
          TEST_PATH: ${{ secrets.BACKEND_TEST_PATH }}
        run: dotnet test "${GITHUB_WORKSPACE}/${TEST_PATH}"

  deploy:
    needs: [frontend, backend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy Backend
        run: |
          cd Backend/aspnet-core
          dotnet publish --configuration Release --output backendPublish .\Backend\aspnet-core\CompanyWebsite.sln
          # Add your deployment steps here using the published output from the previous step
          iisreset /stop
          Copy-Item ./backendPublish/* C:/inetpub/wwwroot/backend-aspnet-core -Recurse -Force
          iisreset /start

      - name: Deploy Frontend to IIS
        run: |
          # Add your deployment steps here to deploy the frontend to IIS
          # Example:
          # - Copy the frontend build output to the IIS virtual directory
          

  database:
    needs: [backend]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Database Code
        uses: actions/checkout@v2
        with:
          path: Backend/database


      - name: Update Database Migration
        run: |
          cd Backend/database
          dotnet ef database update --project ../aspnet-core/CompanyWebsite.csproj --startup-project ../aspnet-core/CompanyWebsite.csproj --configuration Release

  create-release:
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0 # Replace with your desired tag name
          release_name: Release v1.0.0 # Replace with your desired release name
          draft: false
          prerelease: false
          target_commitish: ${{ github.sha }}
          body: |
            Release v1.0.0
            - Added frontend deployment to IIS
            - Added backend deployment using .NET Core CLI
            - Updated database migration
            - Created new release

          token: ${{ secrets.GITHUB_TOKEN }} 
