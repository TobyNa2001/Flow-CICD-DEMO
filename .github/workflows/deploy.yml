name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Npm install
        run: |
          cd Frontend/angular
          npm install
    
      - name: Build Frontend
        env:
          # Accessing the secret variable
          FTEST_PATH: ${{ secrets.FRONTEND_SOLUTION_PATH }}
        run: dotnet build "${GITHUB_WORKSPACE}/${FTEST_PATH}"

  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Solution Backend
        env:
          # Accessing the secret variable
          SOLUTION_PATH: ${{ secrets.BACKEND_SOLUTION_PATH }}
        run: |
          dotnet build "${GITHUB_WORKSPACE}/${SOLUTION_PATH}"
        
      - name: Test Backend
        env:
          # Accessing the secret variable
          TEST_PATH: ${{ secrets.BACKEND_TEST_PATH }}
        run: dotnet test "${GITHUB_WORKSPACE}/${TEST_PATH}"

  deploy:
    needs: [frontend, backend]
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy Backend to IIS
        run: |
          cd Backend/aspnet-core/src/CompanyWebsite.Web.Host
          #dotnet publish CompanyWebsite.Web.Host.csproj /p:PublishProfile=./Properties/PublishProfiles/IISProfile.pubxml --configuration Release 
          dotnet publish CompanyWebsite.Web.Host.csproj --configuration Release --output ./publish /p:WebPublishMethod=MSDeploy /p:DeployIisAppPath="${{ secrets.IIS_NAME }}" /p:MSDeployServiceURL="${{ secrets.IIS_URL }}" /p:UserName="${{ secrets.IIS_USERNAME}}" /p:Password="${{ secrets.IIS_PASSWORD}}" /p:AllowUntrustedCertificate=true
          
      - name: Copy Published Files to IIS Server
        run: |
          # Use SCP to copy the published files to the remote IIS server
          # Replace the placeholders with your actual server information
          #scp -r ./Backend/aspnet-core/src/CompanyWebsite.Web.Host/bin/Release/net6.0/publish/* username@your_server_ip:/path/to/iis/website

      - name: Restart IIS on Remote Server
        run: |
          # Use SSH or any other method to restart IIS on the remote server
          # Replace the placeholders with your actual server information
          #ssh username@your_server_ip "iisreset /restart"

      - name: Deploy Frontend to IIS
        run: |
          # Add your deployment steps here to deploy the frontend to IIS
          # Example:
          # - Copy the frontend build output to the IIS virtual directory
          
