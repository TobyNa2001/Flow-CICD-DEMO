name: CICD

on:
  push:
    branches:
      - main

jobs: 
  Setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Solution Backend
        env:
          # Accessing the secret variable
          SOLUTION_PATH: ${{ secrets.BACKEND_SOLUTION_PATH }}
        run: |
         dotnet build "${GITHUB_WORKSPACE}/${SOLUTION_PATH}"
        
      - name: Test test Backend
        env:
          # Accessing the secret variable
          TEST_PATH: ${{ secrets.BACKEND_TEST_PATH }}
        run: dotnet test "${GITHUB_WORKSPACE}/${TEST_PATH}"
        
      - name: Build Frontend
        env:
            # Accessing the secret variable
            FTEST_PATH: ${{ secrets.FRONTEND_SOLUTION_PATH }}
        run: dotnet build "${GITHUB_WORKSPACE}/${FTEST_PATH}"
    
      - name: Npm install
        run: |
            cd Frontend/angular
            npm install
        continue-on-error: true
            
      - name: Npm start
        id: start-app
        run: |
          cd Frontend/angular
          npm start
        
      - name: Check if npm start succeeded
        run: |
          if [ ${{ steps.start-app.outcome }} == 'success' ]; then
            echo "npm start succeeded!"
          else
            echo "npm start failed!"
            exit 1
          fi
