name: CICD

on:
  push:
    branches:
      - main

jobs: 
  Setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0']
    steps:
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build Solution Backend
        env:
          # Accessing the secret variable
          SOLUTION_PATH: ${{ secrets.BACKEND_SOLUTION_PATH }}
        run: |
         dotnet build "${GITHUB_WORKSPACE}/${SOLUTION_PATH}"
        
      - name: Test test Backend
        env:
          # Accessing the secret variable
          TEST_PATH: ${{ secrets.BACKEND_TEST_PATH }}
        run: dotnet test "${GITHUB_WORKSPACE}/${TEST_PATH}"
        
      - name: Build Frontend
        env:
            # Accessing the secret variable
            FTEST_PATH: ${{ secrets.FRONTEND_SOLUTION_PATH }}
        run: dotnet build "${GITHUB_WORKSPACE}/${FTEST_PATH}"
    
      - name: Npm install
        run: |
            cd Frontend/angular
            npm install
          
      - name: Npm start
        id: start-app
        run: |
          cd Frontend/angular
          # Start npm start in the background and store the PID (Process ID) of the npm start process
          npm start &
          start_pid=$!
          # Wait for two minutes (120 seconds) and store the exit status
          timeout 120 bash -c "wait $start_pid; echo \$?"
          # Save the exit status in a variable for later use
          exit_status=$?
          # Kill the npm start process after two minutes (if it hasn't already stopped)
          kill $start_pid || true
          # Exit with the saved exit status
          exit $exit_status

# Check the exit status of npm start and proceed accordingly
      - name: Check Npm start status
        if: steps.start-app.outputs.code == 0
        run: |
          echo "npm start completed successfully!"
          # Perform actions for successful compilation here
      
      - name: Handle Npm start failure
        if: steps.start-app.outputs.code != 0
        run: |
          echo "npm start failed!"
          # Perform actions for failed compilation here
      
